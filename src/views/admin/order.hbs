<div class="container-fluid px-4">
    <h1 class="mt-4">Manager Orders</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/admin">Dashboard</a></li>
        <li class="breadcrumb-item active">Orders</li>
    </ol>
    <div id="search" class="row">
        <div class="form-group col-6">
            <label for="name">Fullname</label>
            <input type="text" name="fullname" class="form-control" id="fullname" placeholder="Enter fullname">
        </div>
        <div class="form-group col-6">
            <label for="phoneNumber">Phone</label>
            <input type="text" name="phoneNumber" class="form-control" id="phoneNumber" placeholder="Enter phone">
        </div>
        <div class="form-group col-6">
            <label for="totalPrice">Total price</label>
            <input type="number" name="totalPrice" class="form-control" id="totalPrice" placeholder="Enter total price">
        </div>
        <div class="form-group col-6">
            <label for="status">Status</label>
            <select id="status" name="status" class="form-select">
                <option selected value="">All</option>
                <option value="Info">Info</option>
                <option value="Payment">Payment</option>
                <option value="Review">Review</option>
                <option value="Proccess">Proccess</option>
                <option value="Delivering">Delivering</option>
                <option value="Shipped">Shipped</option>
                <option value="Cancel">Cancel</option>
            </select>
        </div>
        <div class="form-group col-6">
            <label for="isDeleted">Is deleted</label>
            <select id="isDeleted" name="isDeleted" class="form-select">
                <option selected value="">All</option>
                <option value="false">False</option>
                <option value="true">True</option>
            </select>
        </div>
        <div class="form-group col-6">
            <label for="createdAt">Created at</label>
            <input type="text" name="createdAt" class="form-control" id="createdAt" placeholder="Enter created at">
        </div>
        <div class="form-group col-6">
            <label for="updatedAt">Updated at</label>
            <input type="text" name="updatedAt" class="form-control" id="updatedAt" placeholder="Enter updated at">
        </div>
        <div class="form-group col-6">
            <label for="createdBy">Created by</label>
            <select id="createdBy" name="createdBy" class="form-select">
                <option selected value="">Not set</option>
                {{#each users}}
                <option value="{{this._id}}">{{this.fullname}}-{{this.email}}</option>
                {{/each}}
            </select>
        </div>
        <div class="form-group col-6">
            <label for="Updated by">Updated by</label>
            <select id="updatedBy" name="updatedBy" class="form-select">
                <option selected value="">Not set</option>
                {{#each users}}
                <option value="{{this._id}}">{{this.fullname}}-{{this.email}}</option>
                {{/each}}
            </select>
        </div>
        <div class="form-group col-6">
            <label for="Deleted by">Deleted by</label>
            <select id="deletedBy" name="deletedBy" class="form-select">
                <option selected value="">Not set</option>
                {{#each users}}
                <option value="{{this._id}}">{{this.fullname}}-{{this.email}}</option>
                {{/each}}
            </select>
        </div>

        <div class='col-6'>
            <button type="button" class="btn btn-primary btn-search">Search</button>
        </div>
    </div>

    <div class="card mb-4 mt-3">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Orders

            <div class=" mb-1 mt-2">
                <button type="button" class="btn btn-primary btn-view">View</button>
                <button type="button" class="btn btn-primary btn-update">Update</button>
                <button type="button" class="btn btn-primary btn-delete">Delete</button>
                <button type="button" class="btn btn-primary btn-export">Export</button>
            </div>
        </div>
        <div class="card-body">
            <div class="input-group" style="width: 200px;">
                <div class="input-group-prepend">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown"
                        aria-haspopup="true" aria-expanded="false">Per page</button>
                    <div class="dropdown-menu">
                        <div class="dropdown-item perPageItem">10</div>
                        <div class="dropdown-item perPageItem">50</div>
                        <div class="dropdown-item perPageItem">100</div>
                        <div class="dropdown-item perPageItem">200</div>
                        <div class="dropdown-item perPageItem">500</div>
                    </div>
                </div>
                <input id="perPage" type="number" name="perPage" min="1" value="10" class="form-control">
            </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th><input class="checkAll" type="checkbox"></th>
                        <th>Fullname</th>
                        <th>Phone</th>
                        <th>Total price</th>
                        <th>Status</th>
                        <th>Deleted</th>
                        <th>Created at</th>
                        <th>Updated at</th>
                    </tr>
                </thead>
                <tbody class="results">

                </tbody>
            </table>
            <ul class="pagination" style="display: flex; justify-content: flex-end;">

            </ul>
        </div>
    </div>
</div>
<div id="view" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">VIEW ORDER</h5>
            </div>
            <div class="modal-body row">
                <div class="form-group col-6">
                    <label for="name">Fullname</label>
                    <input type="text" disabled name="fullname" class="form-control" id="fullname">
                </div>
                <div class="form-group col-6">
                    <label for="phoneNumber">Phone</label>
                    <input type="text" disabled name="phoneNumber" class="form-control" id="phoneNumber">
                </div>
                <div class="form-group col-6">
                    <label for="address">Address</label>
                    <input type="text" disabled name="address" class="form-control" id="address">
                </div>
                <div class="form-group col-6">
                    <label for="totalPrice">Total price</label>
                    <input type="number" disabled name="totalPrice" class="form-control" id="totalPrice">
                </div>
                <div class="form-group col-6">
                    <label for="status">Status</label>
                    <input type="text" disabled name="status" class="form-control" id="status">
                </div>
                <div class="form-group col-6">
                    <label for="password">Is deleted</label>
                    <select disabled id="isDeleted" name="isDeleted" class="form-select">
                        <option value="false">False</option>
                        <option value="true">True</option>
                    </select>
                </div>
                <div class="form-group col-6">
                    <label for="createdAt">Created at</label>
                    <input type="text" disabled name="createdAt" class="form-control" id="createdAt">
                </div>
                <div class="form-group col-6">
                    <label for="updatedAt">Updated at</label>
                    <input type="text" disabled name="updatedAt" class="form-control" id="updatedAt">
                </div>
                <div class="form-group col-6">
                    <label for="createdBy">Created by</label>
                    <input type="text" disabled name="createdBy" class="form-control" id="createdBy">
                </div>
                <div class="form-group col-6">
                    <label for="updatedBy">Updated by</label>
                    <input type="text" disabled name="updatedBy" class="form-control" id="updatedBy">
                </div>
                <div class="form-group col-6">
                    <label for="deletedBy">Deleted by</label>
                    <input type="text" disabled name="deletedBy" class="form-control" id="deletedBy">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-view-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div id="update" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">EDIT ORDER</h5>
            </div>
            <div class="modal-body row">
                <div class="form-group col-6">
                    <label for="name">Fullname</label>
                    <input type="text" name="fullname" class="form-control" id="fullname" placeholder="Enter fullname">
                </div>
                <div class="form-group col-6">
                    <label for="phoneNumber">Phone</label>
                    <input type="text" name="phoneNumber" class="form-control" id="phoneNumber"
                        placeholder="Enter phone">
                </div>
                <div class="form-group col-6">
                    <label for="address">Addres</label>
                    <input type="text" name="address" class="form-control" id="address" placeholder="Enter address">
                </div>
                <div class="form-group col-6">
                    <label for="totalPrice">Total price</label>
                    <input type="number" name="totalPrice" class="form-control" id="totalPrice"
                        placeholder="Enter total price">
                </div>
                <div class="form-group col-6">
                    <label for="status">Status</label>
                    <select id="status" name="status" class="form-select">
                        <option selected value="">All</option>
                        <option value="Info">Info</option>
                        <option value="Payment">Payment</option>
                        <option value="Review">Review</option>
                        <option value="Proccess">Proccess</option>
                        <option value="Delivering">Delivering</option>
                        <option value="Shipped">Shipped</option>
                        <option value="Cancel">Cancel</option>
                    </select>
                </div>
                <div class="form-group col-6">
                    <label for="password">Is deleted</label>
                    <select id="isDeleted" name="isDeleted" class="form-select">
                        <option value="false">False</option>
                        <option value="true">True</option>
                    </select>
                </div>
                <div class="form-group col-6">
                    <label for="createdAt">Created at</label>
                    <input type="text" disabled name="createdAt" class="form-control" id="createdAt">
                </div>
                <div class="form-group col-6">
                    <label for="updatedAt">Updated at</label>
                    <input type="text" disabled name="updatedAt" class="form-control" id="updatedAt">
                </div>
                <div class="form-group col-6">
                    <label for="createdBy">Created by</label>
                    <input type="text" disabled name="createdBy" class="form-control" id="createdBy">
                </div>
                <div class="form-group col-6">
                    <label for="updatedBy">Updated by</label>
                    <input type="text" disabled name="updatedBy" class="form-control" id="updatedBy">
                </div>
                <div class="form-group col-6">
                    <label for="deletedBy">Deleted by</label>
                    <input type="text" disabled name="deletedBy" class="form-control" id="deletedBy">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-update-cancel" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary btn-update-save">Save</button>
            </div>
        </div>
    </div>
</div>
<div id="delete" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">DELETE ORDERS</h5>
            </div>
            <div class="modal-body row">
                <p>Are you sure to delete these orders? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-delete-cancel" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger btn-delete-save">Confirm</button>
            </div>
        </div>
    </div>
</div>
<div id="export" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">EXPORT USERS</h5>
            </div>
            <div class="modal-body row">
                <div class="form-group col-12">
                    You want to export all orders or only orders in current page?
                </div>
                <div class="form-group col-6">
                    <label for="type">Type</label>
                    <select id="type" name="type" class="form-select">
                        <option value="all">All</option>
                        <option value="currentPage">Current Page</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-export-cancel" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary btn-export-save">Confirm</button>
            </div>
        </div>
    </div>
</div>
<script>
    const search = async (query = {}) => {
        let params = "";
        for (let key in query) {
            if (!!query[key]) {
                params += `${key}=${query[key]}&`;
            }
        }
        const pagination = await fetch(`/admin/orders/search?${params}`).then(res => res.json());
        return pagination;
    }
    const updateTable = (orders) => {
        const tbody = $("tbody.results");
        tbody.empty();
        orders.forEach(user => {
            tbody.append(`
                <tr>
                    <td><input class="checkItem" value="${user._id}" type="checkbox"></td>
                    <td>${user.fullname}</td>
                    <td>${user.phoneNumber || ""}</td>
                    <td>${user.totalPrice}</td>
                    <td>${user.status}</td>
                    <td>${user.isDeleted}</td>
                    <td>${!!user.createdAt ? moment(user.createdAt).format('DD/MM/YY HH:mm') : ""}</td>
                    <td>${!!user.updatedAt ? moment(user.updatedAt).format('DD/MM/YY HH:mm') : ""}</td>
                </tr>
            `);
        });
    }
    const updatePagination = (totalPage = 0, page = 1) => {
        const paginationTag = $(".pagination");
        paginationTag.empty();
        if (page > 1) {
            paginationTag.append(`<li class="page-item page-preview "><div class="page-link">Previous</div></li>`);
        } else {
            paginationTag.append(`<li class="page-item page-preview disabled"><div class="page-link">Previous</div></li>`);
        }
        let start = page - 4 > 0 ? page - 4 : 1;
        let end = page + 4 < totalPage ? page + 4 : totalPage;
        if (start > 1) {
            paginationTag.append(`<li class="page-item disabled"><div class="page-link" >...</div></li>`);
        }
        for (let i = start; i <= end; i++) {
            if (i == page) {
                paginationTag.append(`<li class="page-item page-item-number active"><div class="page-link" >${i}</div></li>`);
            } else {
                paginationTag.append(`<li class="page-item page-item-number"><div class="page-link" >${i}</div></li>`);
            }
        }
        if (end < totalPage) {
            paginationTag.append(`<li class="page-item disabled"><div class="page-link" >...</div></li>`);
        }
        if (page < totalPage) {
            paginationTag.append(`<li class="page-item page-next"><div class="page-link" >Next</div></li>`);
        } else {
            paginationTag.append(`<li class="page-item page-next disabled"><div class="page-link" >Next</div></li>`);
        }
    }
    const clearInputs = (parentId) => {
        $(`#${parentId} input`).val("");
        $(`#${parentId} select`).val("");
    }

    $(document).ready(async function () {
        $('input[name="createdAt"]').daterangepicker({
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear',
                format: 'DD/MM/YYYY',
            }
        });
        $('input[name="createdAt"]').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
        });
        $('input[name="createdAt"]').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
        });
        $('input[name="updatedAt"]').daterangepicker({
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear',
                format: 'DD/MM/YYYY',
            }
        });
        $('input[name="updatedAt"]').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
        });

        $('input[name="updatedAt"]').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
        });

        const pagination = await search();
        const { totalPage = 0, page = 1, data = [] } = pagination;
        updateTable(data);
        updatePagination(totalPage, page);

        $(".checkAll").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
        });
        $(".checkItem").click(function () {
            const checkAll = $(".checkItem").toArray().every(item => item.checked);
            $(".checkAll").prop('checked', checkAll);
        });
        $(".perPageItem").click(async function () {
            const perPage = $(this).text();
            $("#perPage").val(perPage);
            searchAction();
        });
        $("#perPage").on("input", async function () {
            const perPage = $(this).val();
            searchAction();
        });
        $(".pagination").on("click", ".page-next", async function () {
            const currentPage = Number.parseInt($(".pagination .active").text()) || 1;
            $(".pagination .active").removeClass("active");
            $(`.pagination .page-item-number`)[currentPage].classList.add("active");
            searchAction();
        });
        $(".pagination").on("click", ".page-preview", async function () {
            const currentPage = $(".pagination .active").text() || 2;
            $(".pagination .active").removeClass("active");
            $(`.pagination .page-item-number`)[currentPage - 2].classList.add("active");
            searchAction();
        });
        $(".pagination").on("click", ".page-item-number", async function () {
            $(".pagination .active").removeClass("active");
            $(this).addClass("active");
            searchAction();
        });
        const searchAction = async function () {
            try {
                $("#main-loading").addClass("show");
                const fullname = $("#search #fullname").val();
                const phoneNumber = $("#search #phoneNumber").val();
                const address = $("#search #address").val();
                const totalPrice = $("#search #totalPrice").val();
                const status = $("#search #status").val();
                const isDeleted = $("#search #isDeleted").val();
                const createdAt = $("#search #createdAt").val();
                const updatedAt = $("#search #updatedAt").val();
                const createdBy = $("#search #createdBy").val();
                const updatedBy = $("#search #updatedBy").val();
                const deltedBy = $("#search #deletedBy").val();
                const perPage = $("#perPage").val() || 10;
                const currentPage = $(".pagination .active").text() || 1;
                const query = {
                    fullname,
                    phoneNumber,
                    address,
                    totalPrice,
                    status,
                    isDeleted,
                    createdAt,
                    updatedAt,
                    createdBy,
                    updatedBy,
                    deltedBy,
                    limit: perPage,
                    page: currentPage
                };
                const pagination = await search(query);
                const { totalPage = 0, page = 1, data = [] } = pagination;
                updateTable(data);
                updatePagination(totalPage, page);
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        };
        $(".btn-search").click(searchAction);
        $(".btn-view").click(async function () {
            try {
                $("#main-loading").addClass("show");
                const checkedItems = $(".checkItem:checked").toArray();
                if (checkedItems.length == 0) {
                    alert("Please choose at least one item");
                    return;
                }
                if (checkedItems.length > 1) {
                    alert("Please choose only one item");
                    return;
                }
                const id = checkedItems[0].value;
                const order = await fetch(`/admin/orders/search/${id}`).then(res => res.json());
                $("#view #fullname").val(order.fullname);
                $("#view #phoneNumber").val(order.phoneNumber);
                $("#view #address").val(order.address);
                $("#view #totalPrice").val(order.totalPrice);
                $("#view #status").val(order.status);
                $("#view #isDeleted").val(`${order.isDeleted}`);
                $("#view #createdAt").val(!!order.createdAt ? moment(order.createdAt).format('DD/MM/YY HH:mm') : "");
                $("#view #updatedAt").val(!!order.updatedAt ? moment(order.updatedAt).format('DD/MM/YY HH:mm') : "");
                $("#view #createdBy").val(!!order.createdByObj ? `${order.createdByObj?.fullname}-${order.createdByObj?.email}` : "");
                $("#view #updatedBy").val(!!order.updatedByObj ? `${order.updatedByObj?.fullname}-${order.updatedByObj?.email}` : "");
                $("#view #deletedBy").val(!!order.deletedByObj ? `${order.deletedByObj?.fullname}-${order.deletedByObj?.email}` : "");
                $("#view").modal("show");
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
        $(".btn-update").click(async function () {
            try {
                const checkedItems = $(".checkItem:checked").toArray();
                if (checkedItems.length == 0) {
                    alert("Please choose at least one item");
                    return;
                }
                if (checkedItems.length > 1) {
                    alert("Please choose only one item");
                    return;
                }
                const id = checkedItems[0].value;
                const order = await fetch(`/admin/orders/search/${id}`).then(res => res.json());
                $("#update #fullname").val(order.fullname);
                $("#update #phoneNumber").val(order.phoneNumber);
                $("#update #address").val(order.address);
                $("#update #totalPrice").val(order.totalPrice);
                $("#update #status").val(order.status);
                $("#update #isDeleted").val(`${order.isDeleted}`);
                $("#update #createdAt").val(!!order.createdAt ? moment(order.createdAt).format('DD/MM/YY HH:mm') : "");
                $("#update #updatedAt").val(!!order.updatedAt ? moment(order.updatedAt).format('DD/MM/YY HH:mm') : "");
                $("#update #createdBy").val(!!order.createdByObj ? `${order.createdByObj?.fullname}-${order.createdByObj?.email}` : "");
                $("#update #updatedBy").val(!!order.updatedByObj ? `${order.updatedByObj?.fullname}-${order.updatedByObj?.email}` : "");
                $("#update #deletedBy").val(!!order.deletedByObj ? `${order.deletedByObj?.fullname}-${order.deletedByObj?.email}` : "");
                $("#update").modal("show");
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
        $(".btn-update-cancel").click(function () {
            $("#update").modal("hide");
        });
        $(".btn-update-save").click(async function () {
            try {
                $("#main-loading").addClass("show");
                const checkedItems = $(".checkItem:checked").toArray();
                const id = checkedItems[0].value;
                const fullname = $("#update #fullname").val();
                const phone = $("#update #phone").val();
                const role = $("#update #role").val();
                const password = $("#update #password").val();
                const isDeleted = $("#update #isDeleted").val();
                const body = {
                    id,
                    fullname,
                    phone,
                    role,
                    password,
                    isDeleted
                };
                const res = await fetch(`/admin/orders`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(body)
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    clearInputs("update");
                    $("#update").modal("hide");
                    const pagination = await search();
                    const { totalPage = 0, page = 1, data = [] } = pagination;
                    updateTable(data);
                    updatePagination(totalPage, page);
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
        $(".btn-delete").click(function () {
            const checkedItems = $(".checkItem:checked").toArray();
            if (checkedItems.length == 0) {
                alert("Please choose at least one item");
                return;
            }
            $("#delete").modal("show");
        });
        $(".btn-delete-cancel").click(function () {
            $("#delete").modal("hide");
        });
        $(".btn-delete-save").click(async function () {
            try {
                const checkedItems = $(".checkItem:checked").toArray();
                const ids = checkedItems.map(item => item.value);
                const body = {
                    ids
                };
                const res = await fetch(`/admin/orders`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(body)
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    $("#delete").modal("hide");
                    const pagination = await search();
                    const { totalPage = 0, page = 1, data = [] } = pagination;
                    updateTable(data);
                    updatePagination(totalPage, page);
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
        $(".btn-import").click(function () {
            $("#import").modal("show");
        });
        $(".btn-import-cancel").click(function () {
            $("#import").modal("hide");
        });
        $(".btn-import-save").click(async function () {
            const file = $("#import #file").val();
            if (!file) {
                alert("Please choose file");
                return;
            }
            //do to import user
            $("#import").modal("hide");
        });
        $(".btn-export").click(function () {
            $("#export").modal("show");
        });
        $(".btn-export-cancel").click(function () {
            $("#export").modal("hide");
        });
        $(".btn-export-save").click(async function () {
            const type = $("#export #type").val();
            if (type == "all") {
                //do to export all
            } else {
                //do to export current page
            }
            $("#export").modal("hide");
        });
    });
</script>