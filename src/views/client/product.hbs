<!-- Page Header Start -->
<div class="container-fluid bg-secondary mb-5">
    <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 300px">
        <h1 class="font-weight-semi-bold text-uppercase mb-3">Our Shop</h1>
        <div class="d-inline-flex">
            <p class="m-0"><a href="/">Home</a></p>
            <p class="m-0 px-2">-</p>
            <p class="m-0">Shop</p>
        </div>
    </div>
</div>
<!-- Page Header End -->


<!-- Shop Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-12">
            <!-- Price Start -->
            <div class="row border-bottom mb-4">
                <div class="mb-2 col-lg-6 col-md-12">
                    <h5 class="font-weight-semi-bold mb-4">Original price</h5>
                    <form>
                        <div
                            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" name="originalPrice" value="" class="filter-input custom-control-input"
                                checked id="price-all">
                            <label class="custom-control-label" for="price-all">All Price</label>
                            <span class="badge border font-weight-normal">{{originalPriceCount}}</span>
                        </div>
                        {{#each originalPrices}}
                        <div
                            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" name="originalPrice" class="filter-input custom-control-input"
                                id="price-{{this._id}}">
                            <label class="custom-control-label" for="price-{{this._id}}">${{this._id}}</label>
                            <span class="badge border font-weight-normal">{{this.count}}</span>
                        </div>
                        {{/each}}
                    </form>
                </div>
                <!-- Price End -->
                <!-- Price Start -->
                <div class="mb-2 col-lg-6 col-md-12">
                    <h5 class="font-weight-semi-bold mb-4">Discount price</h5>
                    <form>
                        <div
                            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" name="discountPrice" value="" class="filter-input custom-control-input"
                                checked id="dis-price-all">
                            <label class="custom-control-label" for="dis-price-all">All Price</label>
                            <span class="badge border font-weight-normal">{{discountPriceCount}}</span>
                        </div>
                        {{#each discountPrices}}
                        <div
                            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" name="discountPrice" value="{{this._id}}"
                                class="filter-input custom-control-input" id="dis-price-{{this._id}}">
                            <label class="custom-control-label" for="dis-price-{{this._id}}">${{this._id}}</label>
                            <span class="badge border font-weight-normal">{{this.count}}</span>
                        </div>
                        {{/each}}
                    </form>
                </div>
            </div>
            <!-- Price End -->

            <div class="row border-bottom mb-4">
                <!-- Color Start -->
                <div class="mb-2 col-lg-6 col-md-12">
                    <h5 class="font-weight-semi-bold mb-4">Color</h5>
                    <form>
                        <div
                            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" name="color" class="filter-input custom-control-input" value="" checked
                                id="color-all">
                            <label class="custom-control-label" for="color-all">All Color</label>
                            <span class="badge border font-weight-normal">{{colorCount}}</span>
                        </div>
                        {{#each colors}}
                        <div
                            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" name="color" value="{{this._id}}"
                                class="filter-input custom-control-input" id="color-{{this._id}}">
                            <label class="custom-control-label" for="color-{{this._id}}">{{this._id}}</label>
                            <span class="badge border font-weight-normal">{{this.count}}</span>
                        </div>
                        {{/each}}
                    </form>
                </div>
                <!-- Color End -->

                <!-- Size Start -->
                <div class="mb-2 col-lg-6 col-md-12">
                    <h5 class="font-weight-semi-bold mb-4">Size</h5>
                    <form>
                        <div
                            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" name="size" class="filter-input custom-control-input" checked value=""
                                id="size-all">
                            <label class="custom-control-label" for="size-all">All Size</label>
                            <span class="badge border font-weight-normal">{{sizeCount}}</span>
                        </div>
                        {{#each sizes}}
                        <div
                            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" name="size" value="{{this._id}}"
                                class="filter-input custom-control-input" id="size-{{this._id}}">
                            <label class="custom-control-label" for="size-{{this._id}}">{{this._id}}</label>
                            <span class="badge border font-weight-normal">{{this.count}}</span>
                        </div>
                        {{/each}}
                    </form>
                </div>
                <!-- Size End -->
            </div>
        </div>
        <!-- Shop Sidebar End -->


        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-12">
            <div class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div action="" id="search" method="GET">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search by name" id="name"
                                    name="name">
                                <div class="input-group-append">
                                    <button class="btn-search input-group-text bg-transparent text-primary"
                                        type="button">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div>
                            <h5 class="category-filter">{{pagination.extend.categoryObj.name}}</h5>
                        </div>
                        <div class="dropdown ml-4">
                            <button class="btn border dropdown-toggle" type="button" id="triggerId"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Sort by
                            </button>
                            <div class="sort-by dropdown-menu dropdown-menu-right" aria-labelledby="triggerId">
                                <div class="dropdown-item active" value="updatedAt" href="#">Latest</div>
                                <div class="dropdown-item" value="discountPrice" href="#">Best Price</div>
                                <div class="dropdown-item" value="ratings" href="#">Best Rating</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="result-product row">

                </div>

                <div class="col-12 pb-1">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center mb-3">

                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->

<script>
    const search = async (query = {}) => {
        let params = "";
        for (let key in query) {
            if (!!query[key]) {
                params += `${key}=${query[key]}&`;
            }
        }
        const pagination = await fetch(`/products/search?${params}`).then(res => res.json());
        return pagination;
    }
    const updateTable = (cards) => {
        const tbody = $(".result-product");
        tbody.empty();
        cards.forEach(card => {
            tbody.append(`
                 <div class="col-lg-4 col-md-6 col-sm-12 pb-1">
                    <div class="card product-item border-0 mb-4">
                        <div
                            class="card-header product-img position-relative overflow-hidden bg-transparent border p-0">
                            <img class="img-fluid w-100" src="${card.images.url}" alt="">
                        </div>
                        <div class="card-body border-left border-right text-center p-0 pt-4 pb-3">
                            <h6 class="text-truncate mb-3">${card.name}</h6>
                            <div class="d-flex justify-content-center">
                                <h6>$${card.discountPrice}</h6>
                                <h6 class="text-muted ml-2"><del>$${card.originalPrice}</del></h6>
                            </div>
                        </div>
                        <div class="card-footer d-flex justify-content-between bg-light border">
                            <a href="/products/${card._id}" class="btn btn-sm text-dark p-0"><i
                                    class="fas fa-eye text-primary mr-1"></i>View Detail</a>
                            <a href="#" class="btn-add-cart btn btn-sm text-dark p-0"><i
                                    class="fas fa-shopping-cart text-primary mr-1"></i>Add To Cart</a>
                        </div>
                    </div>
                </div>
            `);
        });
    }
    const updatePagination = (totalPage = 0, page = 1) => {
        const paginationTag = $(".pagination");
        paginationTag.empty();
        if (page > 1) {
            paginationTag.append(`<li class="page-item page-preview "><div class="page-link">Previous</div></li>`);
        } else {
            paginationTag.append(`<li class="page-item page-preview disabled"><div class="page-link">Previous</div></li>`);
        }
        let start = page - 4 > 0 ? page - 4 : 1;
        let end = page + 4 < totalPage ? page + 4 : totalPage;
        if (start > 1) {
            paginationTag.append(`<li class="page-item disabled"><div class="page-link" >...</div></li>`);
        }
        for (let i = start; i <= end; i++) {
            if (i == page) {
                paginationTag.append(`<li class="page-item page-item-number active"><div class="page-link" >${i}</div></li>`);
            } else {
                paginationTag.append(`<li class="page-item page-item-number"><div class="page-link" >${i}</div></li>`);
            }
        }
        if (end < totalPage) {
            paginationTag.append(`<li class="page-item disabled"><div class="page-link" >...</div></li>`);
        }
        if (page < totalPage) {
            paginationTag.append(`<li class="page-item page-next"><div class="page-link" >Next</div></li>`);
        } else {
            paginationTag.append(`<li class="page-item page-next disabled"><div class="page-link" >Next</div></li>`);
        }
    }
    const clearInputs = (parentId) => {
        $(`#${parentId} input`).val("");
        $(`#${parentId} select`).val("");
    }
    const searchAction = async function () {
        try {
            $("#main-loading").addClass("show");
            const name = $("#search #name").val();
            const color = $(".filter-input[name='color']:checked").val();
            const size = $(".filter-input[name='size']:checked").val();
            const originalPrice = $(".filter-input[name='originalPrice']:checked").val();
            const discountPrice = $(".filter-input[name='discountPrice']:checked").val();
            const sortBy = $(".sort-by .active").attr("value");
            const perPage = $("#perPage").val() || 9;
            const currentPage = $(".pagination .active").text() || 1;
            const query = {
                name,
                color,
                size,
                originalPrice,
                discountPrice,
                sortBy: {
                    [sortBy]: -1
                },
                sortBy,
                limit: perPage,
                page: currentPage
            };
            const pagination = await search(query);
            const { totalPage = 0, page = 1, data = [], extend } = pagination;
            updateTable(data);
            updatePagination(totalPage, page);
            $(".category-filter").text(extend?.categoryObj?.name || "All category");
        } catch (error) {
            alert(error.message);
        } finally {
            $("#main-loading").removeClass("show");
        }
    };
    $(document).ready(async function () {
        const params = new URLSearchParams(window.location.search);
        const pagination = await search({ name: params.get("q"), categoryId: params.get("categoryId") });
        const { totalPage = 0, page = 1, data = [], extend } = pagination;
        updateTable(data);
        updatePagination(totalPage, page);
        $(".category-filter").text(extend?.categoryObj?.name || "All category");

        $(".checkAll").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
        });
        $(".checkItem").click(function () {
            const checkAll = $(".checkItem").toArray().every(item => item.checked);
            $(".checkAll").prop('checked', checkAll);
        });
        $(".perPageItem").click(async function () {
            const perPage = $(this).text();
            $("#perPage").val(perPage);
            searchAction();
        });
        $("#perPage").on("input", async function () {
            const perPage = $(this).val();
            searchAction();
        });
        $(".pagination").on("click", ".page-next", async function () {
            const currentPage = Number.parseInt($(".pagination .active").text()) || 1;
            $(".pagination .active").removeClass("active");
            $(`.pagination .page-item-number`)[currentPage].classList.add("active");
            searchAction();
        });
        $(".pagination").on("click", ".page-preview", async function () {
            const currentPage = $(".pagination .active").text() || 2;
            $(".pagination .active").removeClass("active");
            $(`.pagination .page-item-number`)[currentPage - 2].classList.add("active");
            searchAction();
        });
        $(".pagination").on("click", ".page-item-number", async function () {
            $(".pagination .active").removeClass("active");
            $(this).addClass("active");
            searchAction();
        });
        $(".btn-search").click(searchAction);
        $(".filter-input").click(searchAction);
        $(".sort-by").on("click", ".dropdown-item", async function () {
            $(".sort-by .active").removeClass("active");
            $(this).addClass("active");
            searchAction();
        });
    })
    $(document).ready(async function () {
        $(".btn-add-cart").click(async function () {
            try {
                const productId = this.id;

                const res = await fetch("/cart", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ productId })
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    alert(res.message)
                } else {
                    alert(res.message);
                }
            } catch (error) {

            }
        })
    })
</script>