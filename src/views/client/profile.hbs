<div class="container">
    <div class="main-body">
        <div class="row">
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex flex-column align-items-center text-center">
                            <img src="https://bootdey.com/img/Content/avatar/avatar6.png" alt="Admin"
                                class="rounded-circle p-1 bg-primary" width="110">
                            <div class="mt-3">
                                <h4>{{_user.fullname}}</h4>
                                <p class="mb-1">Active date: {{dateToDDMMYYHHmm _user.createdAt}}</p>
                                <p class="text-muted font-size-sm">{{_user.phone}}</p>
                                <a href="/products" class="btn btn-primary">Shopping</a>
                                <a href="/cart" class="btn btn-outline-primary">Cart</a>
                            </div>
                        </div>
                        <hr class="my-4">
                        <ul class="list-group list-group-flush">
                            <h5 style="display: flex; justify-content: center;" class="pb-4">
                                CHANGE PASSWROD
                            </h5>
                            <div class="row mb-3">
                                <div class="col-sm-4">
                                    <h6 class="mb-0">Old</h6>
                                </div>
                                <div class="col-sm-8 text-secondary">
                                    <input type="password" class="form-control" name="password" value=""
                                        placeholder="Enter old password">
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-sm-4">
                                    <h6 class="mb-0">New</h6>
                                </div>
                                <div class="col-sm-8 text-secondary">
                                    <input type="password" class="form-control" value="" name="newPassword"
                                        placeholder="Enter new password">
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-sm-4">
                                    <h6 class="mb-0">Repeat</h6>
                                </div>
                                <div class="col-sm-8 text-secondary">
                                    <input type="password" class="form-control" value="" name="rePassowrdF"
                                        placeholder="Retype password">
                                </div>
                            </div>
                            <div class="row mr-2" style="display: flex; justify-content: right;">
                                <input type="button" class="btn btn-primary px-4 btn-update-password" value="Save">
                            </div>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body">
                        <h5 style="display: flex; justify-content: center; padding-bottom: 20px;">YOUR INFO</h5>
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Full Name</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                <input type="text" class="form-control" name="fullname" value="{{_user.fullname}}">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Email</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                <input type="email" class="form-control" name="email" value="{{_user.email}}">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Phone</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                <input type="tel" class="form-control" name="phone" value="{{_user.phone}}">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Address</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                <input type="text" class="form-control" name="address"
                                    value="Nguyen Van Cu street, 5 district, Ho Chi Minh city">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Lastest updated</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                <input type="text" class="form-control" disabled
                                    value="{{dateToDDMMYYHHmm user.updatedAt}}">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3"></div>
                            <div class="col-sm-9 text-secondary">
                                <input type="button" class="btn btn-primary px-4 btn-update-profile" value="Save Changes">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="d-flex align-items-center mb-3">YOUR CARDS</h5>
                                <div class="card mb-4 mt-3">
                                    <div class="ml-4 mb-1 mt-2">
                                        <button type="button" class="btn btn-primary btn-search">Refresh</button>
                                        <button type="button" class="btn btn-primary btn-add">Add</button>
                                        <button type="button" class="btn btn-primary btn-view">View</button>
                                        <button type="button" class="btn btn-primary btn-delete">Delete</button>
                                    </div>
                                    <div class="card-body">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th><input class="checkAll" type="checkbox"></th>
                                                    <th>Number</th>
                                                    <th>Holder</th>
                                                    <th>Created at</th>
                                                </tr>
                                            </thead>
                                            <tbody class="results">

                                            </tbody>
                                        </table>
                                        <ul class="pagination" style="display: flex; justify-content: flex-end;">

                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="add" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">ADD CARD</h5>
            </div>
            <div class="modal-body row">
                <div class="form-group col-6">
                    <label for="cardNumber">Card number</label>
                    <input type="text" name="cardNumber" class="form-control" id="cardNumber"
                        placeholder="Enter card number">
                </div>
                <div class="form-group col-6">
                    <label for="cardHolder">Card holder</label>
                    <input type="text" name="cardHolder" class="form-control" id="cardHolder"
                        placeholder="Enter card holder">
                </div>
                <div class="form-group col-6">
                    <label for="expirationDate">Expiration date</label>
                    <input type="text" name="expirationDate" class="form-control" id="expirationDate"
                        placeholder="DD/MM/YYYY">
                </div>
                <div class="form-group col-6">
                    <label for="ccv">CCV</label>
                    <input type="text" name="ccv" class="form-control" id="ccv" placeholder="123">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-add-cancel" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary btn-add-save">Save</button>
            </div>
        </div>
    </div>
</div>
<div id="view" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">VIEW CARD</h5>
            </div>
            <div class="modal-body row">
                <div class="form-group col-6">
                    <label for="cardNumber">Card number</label>
                    <input type="text" name="cardNumber" class="form-control" disabled id="cardNumber"
                        placeholder="Enter card number">
                </div>
                <div class="form-group col-6">
                    <label for="cardHolder">Card holder</label>
                    <input type="text" name="cardHolder" class="form-control" disabled id="cardHolder"
                        placeholder="Enter card holder">
                </div>
                <div class="form-group col-6">
                    <label for="createdAt">Created at</label>
                    <input type="text" disabled name="createdAt" class="form-control" id="createdAt">
                </div>
                <div class="form-group col-6">
                    <label for="createdBy">Created by</label>
                    <input type="text" disabled name="createdBy" class="form-control" id="createdBy">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-view-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div id="update" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">EDIT CARD</h5>
            </div>
            <div class="modal-body row">
                <div class="form-group col-6">
                    <label for="cardNumber">Card number</label>
                    <input type="text" name="cardNumber" class="form-control" id="cardNumber"
                        placeholder="Enter card number">
                </div>
                <div class="form-group col-6">
                    <label for="cardHolder">Card holder</label>
                    <input type="text" name="cardHolder" class="form-control" id="cardHolder"
                        placeholder="Enter card holder">
                </div>
                <div class="form-group col-6">
                    <label for="expirationDate">Expiration date</label>
                    <input type="text" name="expirationDate" class="form-control" id="expirationDate"
                        placeholder="Enter Expiration date">
                </div>
                <div class="form-group col-6">
                    <label for="ccv">CCV</label>
                    <input type="text" name="ccv" class="form-control" id="ccv" placeholder="Enter ccv">
                </div>
                <div class="form-group col-6">
                    <label for="createdAt">Created at</label>
                    <input type="text" disabled name="createdAt" class="form-control" id="createdAt">
                </div>
                <div class="form-group col-6">
                    <label for="createdBy">Created by</label>
                    <input type="text" disabled name="createdBy" class="form-control" id="createdBy">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-update-cancel" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary btn-update-save">Save</button>
            </div>
        </div>
    </div>
</div>
<div id="delete" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">DELETE CARDS</h5>
            </div>
            <div class="modal-body row">
                <p>Are you sure to delete these cards? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-delete-cancel" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger btn-delete-save">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    const search = async (query = {}) => {
        let params = "";
        for (let key in query) {
            if (!!query[key]) {
                params += `${key}=${query[key]}&`;
            }
        }
        const pagination = await fetch(`/card/search?${params}`).then(res => res.json());
        return pagination;
    }
    const updateTable = (cards) => {
        const tbody = $("tbody.results");
        tbody.empty();
        cards.forEach(card => {
            tbody.append(`
                <tr>
                    <td><input class="checkItem" value="${card._id}" type="checkbox"></td>
                    <td>${card.cardNumber}</td>
                    <td>${card.cardHolder}</td>
                    <td>${!!card.createdAt ? moment(card.createdAt).format('DD/MM/YY HH:mm') : ""}</td>
                    <td>${!!card.updatedAt ? moment(card.updatedAt).format('DD/MM/YY HH:mm') : ""}</td>
                </tr>
            `);
        });
    }
    const updatePagination = (totalPage = 0, page = 1) => {
        const paginationTag = $(".pagination");
        paginationTag.empty();
        if (page > 1) {
            paginationTag.append(`<li class="page-item page-preview "><div class="page-link">Previous</div></li>`);
        } else {
            paginationTag.append(`<li class="page-item page-preview disabled"><div class="page-link">Previous</div></li>`);
        }
        let start = page - 4 > 0 ? page - 4 : 1;
        let end = page + 4 < totalPage ? page + 4 : totalPage;
        if (start > 1) {
            paginationTag.append(`<li class="page-item disabled"><div class="page-link" >...</div></li>`);
        }
        for (let i = start; i <= end; i++) {
            if (i == page) {
                paginationTag.append(`<li class="page-item page-item-number active"><div class="page-link" >${i}</div></li>`);
            } else {
                paginationTag.append(`<li class="page-item page-item-number"><div class="page-link" >${i}</div></li>`);
            }
        }
        if (end < totalPage) {
            paginationTag.append(`<li class="page-item disabled"><div class="page-link" >...</div></li>`);
        }
        if (page < totalPage) {
            paginationTag.append(`<li class="page-item page-next"><div class="page-link" >Next</div></li>`);
        } else {
            paginationTag.append(`<li class="page-item page-next disabled"><div class="page-link" >Next</div></li>`);
        }
    }
    const clearInputs = (parentId) => {
        $(`#${parentId} input`).val("");
        $(`#${parentId} select`).val("");
    }

    $(document).ready(async function () {
        $("body").delegate("#datepicker", "focusin", function () {
            $(this).datepicker();
        });
        $('input[name="expirationDate"]').daterangepicker({
            autoUpdateInput: false,
            singleDatePicker: true,
            showDropdowns: true,
            locale: {
                cancelLabel: 'Clear',
                format: 'DD/MM/YYYY',
            }
        });
        $('input[name="expirationDate"]').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('DD/MM/YYYY'));
        });
        $('input[name="expirationDate"]').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
        });

        const pagination = await search();
        const { totalPage = 0, page = 1, data = [] } = pagination;
        updateTable(data);
        updatePagination(totalPage, page);

        $(".checkAll").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
        });
        $(".checkItem").click(function () {
            const checkAll = $(".checkItem").toArray().every(item => item.checked);
            $(".checkAll").prop('checked', checkAll);
        });
        $(".pagination").on("click", ".page-next", async function () {
            const currentPage = Number.parseInt($(".pagination .active").text()) || 1;
            $(".pagination .active").removeClass("active");
            $(`.pagination .page-item-number`)[currentPage].classList.add("active");
            searchAction();
        });
        $(".pagination").on("click", ".page-preview", async function () {
            const currentPage = $(".pagination .active").text() || 2;
            $(".pagination .active").removeClass("active");
            $(`.pagination .page-item-number`)[currentPage - 2].classList.add("active");
            searchAction();
        });
        $(".pagination").on("click", ".page-item-number", async function () {
            $(".pagination .active").removeClass("active");
            $(this).addClass("active");
            searchAction();
        });
        const searchAction = async function () {
            try {
                $("#main-loading").addClass("show");
                const perPage = $("#perPage").val() || 5;
                const currentPage = $(".pagination .active").text() || 1;
                const query = {
                    limit: perPage,
                    page: currentPage
                };
                const pagination = await search(query);
                const { totalPage = 0, page = 1, data = [] } = pagination;
                updateTable(data);
                updatePagination(totalPage, page);
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        };
        $(".btn-search").click(searchAction);
        $(".btn-add").click(function () {
            $("#add").modal("show");
        });
        $(".btn-add-cancel").click(function () {
            $("#add").modal("hide");
        });
        $(".btn-add-save").click(async function () {
            try {
                $("#main-loading").addClass("show");
                const cardNumber = $("#add #cardNumber").val();
                const cardHolder = $("#add #cardHolder").val();
                const expirationDate = $("#add #expirationDate").val();
                const ccv = $("#add #ccv").val();
                const body = {
                    cardNumber,
                    cardHolder,
                    expirationDate,
                    ccv
                };
                const res = await fetch("/card", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(body)
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    clearInputs("add");
                    $("#add").modal("hide");
                    const pagination = await search();
                    const { totalPage = 0, page = 1, data = [] } = pagination;
                    updateTable(data);
                    updatePagination(totalPage, page);
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
        $(".btn-view").click(async function () {
            try {
                $("#main-loading").addClass("show");
                const checkedItems = $(".checkItem:checked").toArray();
                if (checkedItems.length == 0) {
                    alert("Please choose at least one item");
                    return;
                }
                if (checkedItems.length > 1) {
                    alert("Please choose only one item");
                    return;
                }
                const id = checkedItems[0].value;
                const card = await fetch(`/card/${id}`).then(res => res.json());
                $("#view #cardNumber").val(card.cardNumber);
                $("#view #cardHolder").val(card.cardHolder);
                $("#view #createdAt").val(!!card.createdAt ? moment(card.createdAt).format('DD/MM/YY HH:mm') : "");
                $("#view #updatedAt").val(!!card.updatedAt ? moment(card.updatedAt).format('DD/MM/YY HH:mm') : "");
                $("#view #createdBy").val(!!card.createdByObj ? `${card.createdByObj?.fullname}-${card.createdByObj?.email}` : "");
                $("#view #updatedBy").val(!!card.updatedByObj ? `${card.updatedByObj?.fullname}-${card.updatedByObj?.email}` : "");
                $("#view").modal("show");
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
        $(".btn-delete").click(function () {
            const checkedItems = $(".checkItem:checked").toArray();
            if (checkedItems.length == 0) {
                alert("Please choose at least one item");
                return;
            }
            $("#delete").modal("show");
        });
        $(".btn-delete-cancel").click(function () {
            $("#delete").modal("hide");
        });
        $(".btn-delete-save").click(async function () {
            try {
                const checkedItems = $(".checkItem:checked").toArray();
                const ids = checkedItems.map(item => item.value);
                const body = {
                    ids
                };
                $("#main-loading").addClass("show");
                const res = await fetch(`/card`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(body)
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    $("#delete").modal("hide");
                    const pagination = await search();
                    const { totalPage = 0, page = 1, data = [] } = pagination;
                    updateTable(data);
                    updatePagination(totalPage, page);
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
        $(".btn-update-password").click(async () => {
            try {
                const password = $("input[name='password']").val();
                const newPassword = $("input[name='newPassword']").val();
                const rePassowrdF = $("input[name='rePassowrdF']").val();
                if (password.length == 0) {
                    alert("Password must not be empty");
                    return;
                }
                if (newPassword.length < 6) {
                    alert("Password must be at least 6 characters");
                    return;
                }
                if (newPassword != rePassowrdF) {
                    alert("Password and retype password must be the same");
                    return;
                }
                const body = {
                    password,
                    newPassword
                };
                const res = await fetch("/profile/update-password", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(body)
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    alert("Update password successfully");
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            }
        })
        $(".btn-update-profile").click(async () => {
            try {
                const fullname = $("input[name='fullname']").val();
                const email = $("input[name='email']").val();
                const phone = $("input[name='phone']").val();
                const address = $("input[name='address']").val();
                if (fullname.length == 0) {
                    alert("Fullname must not be empty");
                    return;
                }
                if (phone.length == 0) {
                    alert("Phone must not be empty");
                    return;
                }
                if (email.length == 0) {
                    alert("Email must not be empty");
                    return;
                }
                const body = {
                    fullname,
                    email,
                    phone,
                    address
                };
                const res = await fetch("/profile", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(body)
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    alert("Update profile successfully");
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            }
        })
    });
</script>