<!-- Page Header Start -->
<div class="container-fluid bg-secondary mb-5">
    <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 300px">
        <h1 class="font-weight-semi-bold text-uppercase mb-3">Shopping Cart</h1>
        <div class="d-inline-flex">
            <p class="m-0"><a href="/">Home</a></p>
            <p class="m-0 px-2">-</p>
            <p class="m-0">Shopping Cart</p>
        </div>
    </div>
</div>
<!-- Page Header End -->


<!-- Cart Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5">
        <div class="col-lg-8 table-responsive mb-5">
            <table class="table table-bordered mb-0">
                <thead class="bg-secondary text-dark">
                    <tr>
                        <th>Products</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Remove</th>
                    </tr>
                </thead>
                <tbody class="align-left" id="list-products-cart">
                    {{#each products}}
                    <tr>
                        <td class="align-middle"><img src={{this.images.url}} alt=""
                                style="width: 50px; margin-right: 10px">{{this.name}}</td>
                        <td class="align-middle">{{this.discountPrice}}</td>
                        <td class="align-middle">
                            <div class="input-group quantity mx-auto" style="width: 100px;">
                                <div class="input-group-btn">
                                    <button id={{this._id}} class="btn btn-sm btn-primary btn-minus">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </div>
                                <input id={{this._id}} type="text" class="form-control form-control-sm bg-secondary text-center quantity-product"
                                    value={{this.quantity}}>
                                <div class="input-group-btn">
                                    <button id={{this._id}} class="btn btn-sm btn-primary btn-plus">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </td>
                        <td class="align-middle">{{this.total}}</td>
                        <td class="align-middle text-center"><button id={{this._id}} class="btn btn-sm btn-primary btn-delete"><i
                                    class="fa fa-times"></i></button></td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
        <div class="col-lg-4">
            <form class="mb-5" action="">
                <div class="input-group">
                    <input type="text" class="form-control p-4" placeholder="Coupon Code">
                    <div class="input-group-append">
                        <button class="btn btn-primary">Apply Coupon</button>
                    </div>
                </div>
            </form>
            <div class="card border-secondary mb-5">
                <div class="card-header bg-secondary border-0">
                    <h4 class="font-weight-semi-bold m-0">Cart Summary</h4>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3 pt-1" id='subtotal-product-price'>
                        <h6 class="font-weight-medium">Subtotal</h6>
                        <h6 class="font-weight-medium"></h6>
                    </div>
                    <div class="d-flex justify-content-between" id='shiping-price'>
                        <h6 class="font-weight-medium">Shipping</h6>
                        <h6 class="font-weight-medium"></h6>
                    </div>
                </div>
                <div class="card-footer border-secondary bg-transparent">
                    <div class="d-flex justify-content-between mt-2" id='total-product-price'>
                        <h5 class="font-weight-bold">Total</h5>
                        <h5 class="font-weight-bold"></h5>
                    </div>
                    <button class="btn btn-block btn-primary my-3 py-3">Proceed To Checkout</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Cart End -->

<div id="delete" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">DELETE PRODUCT FROM CART</h5>
            </div>
            <div class="modal-body">
                <p>Are you sure to delete this product? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-delete-cancel" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger btn-delete-save">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    const getAllByUser = async () => {
        try {
            $("#main-loading").addClass("show");

            const response = await fetch(`/cart/all`).then(res => res.json());
            if (response.errorCode == 0) {
                return response;
            }

            return null;
        } catch (error) {
            alert(error.message);
        } finally {
            $("#main-loading").removeClass("show");
        }
    }

    const getTotalPrice = (products) => {
        let result = 0;
        products.forEach(product => {
            result += product.total;
        });

        return result;
    }

    const renderProducts = (products) => {
        const tbody = $("tbody#list-products-cart");
        tbody.empty();

        products.forEach(product => {
            tbody.append(`
                <tr>
                    <td class="align-middle"><img src="${product.images.url}" alt=""
                            style="width: 50px; margin-right: 10px">${product.name}</td>
                    <td class="align-middle">${product.discountPrice}</td>
                    <td class="align-middle">
                        <div class="input-group quantity mx-auto" style="width: 100px;">
                            <div class="input-group-btn">
                                <button id="${product._id}" class="btn btn-sm btn-primary btn-minus">
                                    <i class="fa fa-minus"></i>
                                </button>
                            </div>
                            <input id="${product._id}" type="text" class="form-control form-control-sm bg-secondary text-center quantity-product"
                                value="${product.quantity}">
                            <div class="input-group-btn">
                                <button id="${product._id}" class="btn btn-sm btn-primary btn-plus">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </td>
                    <td class="align-middle">${product.total}</td>
                    <td class="align-middle text-center"><button id="${product._id}"" class="btn btn-sm btn-primary btn-delete"><i
                                class="fa fa-times"></i></button></td>
                </tr>
            `);
        });

        // render view
        const subTotalPrice = getTotalPrice(products);
        renderSubTotalPrice(subTotalPrice);
        renderShipPrice();
        renderTotalPrice(subTotalPrice);

        //handle again
        handleBtnPlusProduct();
        handleBtnMinusProduct();
        handleBlurInputQuantityProduct();
        handleKeyPressInputQuantityProduct();
        handleDeleteProductFromCart();
    }

    const renderSubTotalPrice = (subTotalPrice) => {
        $("#subtotal-product-price").empty();
        $(`
        <h6 class="font-weight-medium">Subtotal</h6>
        <h6 class="font-weight-medium">$${subTotalPrice}</h6>
        `).appendTo("#subtotal-product-price");
    }

    const renderShipPrice = (shipPrice = 10) => {
        $("#shiping-price").empty();
        $(`
        <h6 class="font-weight-medium">Shipping</h6>
        <h6 class="font-weight-medium">$${shipPrice}</h6>
        `).appendTo("#shiping-price");
    }

    const renderTotalPrice = (subTotalPrice, shipPrice = 10) => {
        $("#total-product-price").empty();
        $(`
       <h5 class="font-weight-bold">Total</h5>
        <h5 class="font-weight-bold">$${subTotalPrice + shipPrice}</h5>
        `).appendTo("#total-product-price");
    }

    const handleBtnPlusProduct = () => {
        $(".btn-plus").click(async function () {
            try {
                $("#main-loading").addClass("show");

                const productId = this.id;

                const res = await fetch("/cart/quantity/add", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ productId })
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    const response = await getAllByUser();

                    if (response) {
                        renderProducts(response.data.products);
                    }
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        })
    }

    const handleBtnMinusProduct = () => {
        $(".btn-minus").click(async function () {
            try {
                $("#main-loading").addClass("show");

                const productId = this.id;

                const res = await fetch("/cart/quantity/minus", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ productId })
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    const response = await getAllByUser();

                    if (response) {
                        renderProducts(response.data.products);
                    }
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        })
    }

    const handleBlurInputQuantityProduct = async (element) => {
        $(".quantity-product").blur(async function () {
            try {
                $("#main-loading").addClass("show");

                const productId = this.id;
                const quantity = this.value;

                const res = await fetch("/cart/quantity", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ productId, quantity })
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    const response = await getAllByUser();

                    if (response) {
                        renderProducts(response.data.products);
                    }
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
    }

    const handleKeyPressInputQuantityProduct = async (element) => {
        $(".quantity-product").on("keydown", async function (event) {
            try {
                if(event.which === 13) {
                    $("#main-loading").addClass("show");

                    const productId = this.id;
                    const quantity = this.value;

                    const res = await fetch("/cart/quantity", {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ productId, quantity })
                    }).then(res => res.json());
                    if (res.errorCode == 0) {
                        const response = await getAllByUser();

                        if (response) {
                            renderProducts(response.data.products);
                        }
                    } else {
                        alert(res.message);
                    }
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
    }

    const handleDeleteProductFromCart = () => {
        let elementClicked = null;

        $(".btn-delete").click(function () {
            $("#delete").modal("show");
            elementClicked = this;
        });

        $(".btn-delete-cancel").click(function () {
            $("#delete").modal("hide");
            elementClicked = null;
        });

        $(".btn-delete-save").click(async function () {
            try {
                $("#main-loading").addClass("show");

                const productId = elementClicked.id;
                
                const res = await fetch(`/cart`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ productId })
                }).then(res => res.json());
                if (res.errorCode == 0) {
                    $("#delete").modal("hide");
                    const response = await getAllByUser();

                    if (response) {
                        renderProducts(response.data.products);
                    }
                } else {
                    alert(res.message);
                }
            } catch (error) {
                alert(error.message);
            } finally {
                $("#main-loading").removeClass("show");
            }
        });
    }

    $(document).ready(async function () {
        handleBtnPlusProduct();
        handleBtnMinusProduct();
        handleBlurInputQuantityProduct();
        handleKeyPressInputQuantityProduct();
        handleDeleteProductFromCart();

        const response = await getAllByUser();
        let products = null;

        if (response) {
            products = response.data.products;
        }

        // render view
        const subTotalPrice = getTotalPrice(products);
        renderSubTotalPrice(subTotalPrice);
        renderShipPrice();
        renderTotalPrice(subTotalPrice);
    })
</script>